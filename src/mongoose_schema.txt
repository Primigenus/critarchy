const mongoose = require('mongoose');
const Schema = mongoose.Schema;

const userSchema = new Schema({
  /* TODO(diedra): figure out this syntax for automatically creating ids */
  id: {type: ObjectId, turnOn: true},
  createdOn: {type: Date, default: Date.now},
  name: String,
  bio: String,
  avatar: String,
  artCreated: [{id: String}],
  // sketchbooksCreated will initially have only one value
  sketchbooksCreated: [{id: String}],
  critiquesCreated: [{id: String}],
  artLiked: [{id: String}],
  sketchbooksLiked: [{id: String}],
  critiquesLiked: [{id: String}],
  followers: [{id: String}],
  following: [{id: String}],
});

const sketchbookSchema = new Schema({
  id: {type: ObjectId, turnOn: true},
  createdOn: {type: Date, default: Date.now},
  createdBy: {id: String},
  title: String,
  description: String,
  art: [{id: String}],
  likedBy: [{id: String}],
});

const artSchema = new Schema({
  id: {type: ObjectId, turnOn: true},
  createdOn: {type: Date, default: Date.now},
  createdBy: {id: String},
  title: String,
  description: String,
/* TODO(diedra): Expand this to be an object holding the URLs to different
 * sizes of images.
 */
  image: String,
  // sketchbooks will initially have only one value
  sketchbooks: [{id: String}],
  critiques: [{id: String}],
  likedBy: [{id: String}],
});

const critiqueSchema = new Schema({
  id: {type: ObjectId, turnOn: true},
  createdOn: {type: Date, default: Date.now},
  createdBy: {id: String},
  title: String,
  content: String,
  art: {id: String},
  thankedBy: [{id: String}],
});
